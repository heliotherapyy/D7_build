{"version":3,"sources":["db/config/reset.js"],"names":["resetDB","knex","schema","dropTableIfExists","createTableIfNotExists","user","increments","primary","string","unique","index","timestamps","console","log","project","integer","references","inTable","text","userProject","date","boolean","post","postImage","like","wish","transaction","report","then"],"mappings":"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","file":"db/config/reset.js","sourcesContent":["/* Defines DB Schema */\n\nimport db from \"./setConfig\";\n\nconst resetDB = ()=>{\n\n  /* If tables exist, drop all tables at first */\n  db.knex.schema.dropTableIfExists(\"user\")\n  .dropTableIfExists(\"project\")\n  .dropTableIfExists(\"userProject\")\n  .dropTableIfExists(\"post\")\n  .dropTableIfExists(\"postImage\")\n  .dropTableIfExists(\"like\")\n  .dropTableIfExists(\"wish\")\n  .dropTableIfExists(\"transaction\")\n  .dropTableIfExists(\"report\")\n  \n  /* After table drops, add new tables */\n  .createTableIfNotExists(\"user\", function(user) {\n    user.increments(\"id\").primary();\n    user.string(\"email\").unique().index();\n    user.string(\"password\");\n    user.string(\"username\");\n    user.string(\"photo\");\n    user.timestamps();\n    console.log(\"created table user\");\n  })\n  .createTableIfNotExists(\"project\", function(project) {\n    project.increments(\"id\").primary();\n    project.integer(\"userId\").references(\"id\").inTable(\"user\");\n    project.string(\"title\");\n    project.string(\"description\");\n    project.text(\"image\");\n    project.integer(\"wishCount\");\n    project.timestamps();\n    console.log(\"created table project\");\n  })\n  .createTableIfNotExists(\"userProject\", function(userProject) {\n    userProject.increments(\"id\").primary();\n    userProject.integer(\"userId\").references(\"id\").inTable(\"user\");\n    userProject.integer(\"projectId\").references(\"id\").inTable(\"project\");\n    userProject.date(\"startAt\");\n    userProject.date(\"endAt\");\n    userProject.boolean(\"success\");\n    userProject.timestamps();\n    console.log(\"created table userProject\");\n  })\n  .createTableIfNotExists(\"post\", function(post) {\n    post.increments(\"id\").primary();\n    post.integer(\"userId\").references(\"id\").inTable(\"user\");\n    post.integer(\"projectId\").references(\"id\").inTable(\"project\");\n    post.integer(\"userProjectId\").references(\"id\").inTable(\"userProject\");\n    post.integer(\"day\");\n    post.integer(\"likeCount\");\n    post.text(\"text\");\n    post.timestamps();\n    console.log(\"created table post\");\n  })\n  .createTableIfNotExists(\"postImage\", function(postImage) {\n    postImage.increments(\"id\").primary();\n    postImage.integer(\"postId\").references(\"id\").inTable(\"post\");\n    postImage.integer(\"index\");\n    postImage.text(\"url\");\n    postImage.timestamps();\n    console.log(\"created table postImage\");\n  })\n  .createTableIfNotExists(\"like\", function(like) {\n    like.increments(\"id\").primary();\n    like.integer(\"userId\").references(\"id\").inTable(\"user\");\n    like.integer(\"postId\").references(\"id\").inTable(\"post\");\n    like.timestamps();\n  })\n  .createTableIfNotExists(\"wish\", function(wish) {\n    wish.increments(\"id\").primary();\n    wish.integer(\"userId\").references(\"id\").inTable(\"user\");\n    wish.integer(\"projectId\").references(\"id\").inTable(\"project\");\n    wish.timestamps();\n  })\n  .createTableIfNotExists(\"transaction\", function(transaction) {\n    transaction.increments(\"id\").primary();\n    transaction.integer(\"userId\").references(\"id\").inTable(\"user\");\n    transaction.integer(\"userProjectId\").references(\"id\").inTable(\"userProject\");\n    transaction.string(\"customer_uid\");\n    transaction.string(\"merchant_uid\");\n    transaction.date(\"paymentDue\");\n    transaction.integer(\"amount\");\n    transaction.string(\"currency\");\n    transaction.boolean(\"refund\");\n    transaction.timestamps();\n  })\n  .createTableIfNotExists(\"report\", function(report) {\n    report.increments(\"id\").primary();\n    report.integer(\"userId\").references(\"id\").inTable(\"user\");\n    report.integer(\"postId\").references(\"id\").inTable(\"post\");\n    report.text(\"description\");\n    report.timestamps();\n  })\n  .then(() => console.log(\"reset DB\"));\n};\n\nexport default resetDB;\n"],"sourceRoot":"/source/"}