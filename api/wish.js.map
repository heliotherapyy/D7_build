{"version":3,"sources":["api/wish.js"],"names":["wish","user","q","body","res","userId","id","userProjectId","projectId","wishCount","wishData","undefined","UserProject","where","fetch","withRelated","then","userProject","toJSON","project","Wish","Project","console","error","destroy","catch","err","save","data","status","send","end"],"mappings":"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","file":"api/wish.js","sourcesContent":["import model from \"../db/models\";\nimport collection from \"../db/collections\";\nimport db from \"../db/config/setConfig\";\n\nconst wish = (user, q, body, res) => {\n  const userId = user.id;\n  let { userProjectId, projectId } = body;\n\n  /* wishCount */\n  let wishCount = 0;\n\n  // Test code below\n  // let userId;\n  // if (user && user.id) {\n  //   userId = user.id;\n  // }\n  // if (q && q.id) {\n  //   userId = q.id;\n  // } else {\n  //   userId = 1;\n  // }\n\n  let wishData;\n  if (userProjectId !== undefined) {\n    wishData = () => {\n      return model.UserProject.where(\"id\", userProjectId).fetch({withRelated: \"project\"})\n      .then((userProject) => {\n        if (userProject) {\n          userProject = userProject.toJSON();\n          projectId = userProject.projectId;\n          wishCount = userProject.project.wishCount;\n          return model.Wish.where({userId: userId, projectId: projectId}).fetch();\n        } else {\n          throw \"Invalid userProjectId\";\n        }\n      });\n    };\n  } else if (projectId !== undefined) {\n    wishData = () => {\n      return model.Project.where({id: projectId}).fetch()\n      .then((project) => {\n        project = project.toJSON();\n        wishCount = project.wishCount;\n        return model.Wish.where({userId: userId, projectId: projectId}).fetch();\n      });\n    };\n  } else {\n    console.error(\"Error: Invalid body.data\");\n  }\n\n  wishData().then((wish) => {\n    if (wish) {\n      wishCount -= 1;\n      return new model.Wish({id: wish.id}).destroy()\n      .catch((err) => \"Failed to destroy Wish table row: \" + err);\n    } else {\n      wishCount += 1;\n      return new model.Wish({userId: userId, projectId: projectId}).save()\n      .catch((err) => \"Failed to add new wish row: \" + err);\n    }\n  })\n  .then(() => {\n    new model.Project({id: projectId}).save({wishCount: wishCount});\n  })\n  .then(() => {\n    return {projectId: projectId, wishCount: wishCount};\n  })\n  .then((data) => {\n    res.status(200).send(data);\n  })\n  .catch((err) => {\n    console.error(\"Error: Failed to store wish info in Wish Table in 'wish.js': \", err);\n    res.status(500).end();\n  });\n\n};\n\nexport default wish;\n"],"sourceRoot":"/source/"}