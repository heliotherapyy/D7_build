{"version":3,"sources":["api/fetchRecommendedProjects.js"],"names":["fetchRecommendedProjects","user","q","res","userId","id","page","Project","forge","orderBy","fetchPage","pageSize","withRelated","then","projects","toJSON","forEach","project","username","userPhoto","doneWish","wishes","wish","data","status","send","catch","err","console","error","end"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;AACA;;AAEA,IAAMA,2BAA2B,SAA3BA,wBAA2B,CAACC,IAAD,EAAOC,CAAP,EAAUC,GAAV,EAAkB;AACjD,MAAMC,SAASH,KAAKI,EAApB;AADiD,MAEzCC,IAFyC,GAEhCJ,CAFgC,CAEzCI,IAFyC;;AAIjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA,mBAAMC,OAAN,CAAcC,KAAd,GAAsBC,OAAtB,CAA8B,YAA9B,EAA4CC,SAA5C,CAAsD;AACpDC,cAAU,EAD0C;AAEpDL,UAAMA,IAF8C;AAGpDM,iBAAa,CACX,MADW,EAEX,QAFW;AAHuC,GAAtD,EAQCC,IARD,CAQM,UAACC,QAAD,EAAY;AAChBA,eAAWA,SAASC,MAAT,EAAX;;AAEAD,aAASE,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC5B;AACAA,cAAQC,QAAR,GAAmBD,QAAQhB,IAAR,CAAaiB,QAAhC;AACAD,cAAQE,SAAR,GAAoBF,QAAQhB,IAAR,CAAakB,SAAjC;AACA,aAAOF,QAAQhB,IAAf;;AAEA;AACAgB,cAAQG,QAAR,GAAmB,KAAnB;AACAH,cAAQI,MAAR,CAAeL,OAAf,CAAuB,UAACM,IAAD,EAAU;AAC/B,YAAIA,KAAKlB,MAAL,KAAgBA,MAApB,EAA4B;AAC1Ba,kBAAQG,QAAR,GAAmB,IAAnB;AACD;AACF,OAJD;AAKA,aAAOH,QAAQI,MAAf;AACD,KAdD;;AAgBA,WAAOP,QAAP;AACD,GA5BD,EA6BCD,IA7BD,CA6BM,UAACU,IAAD,EAAU;AACdpB,QAAIqB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB;AACD,GA/BD,EAgCCG,KAhCD,CAgCO,UAACC,GAAD,EAAS;AACdC,YAAQC,KAAR,CAAc,mEAAd,EAAmFF,GAAnF;AACAxB,QAAIqB,MAAJ,CAAW,GAAX,EAAgBM,GAAhB;AACD,GAnCD;AAoCD,CApDD;;kBAsDe9B,wB","file":"api/fetchRecommendedProjects.js","sourcesContent":["import model from \"../db/models\";\nimport collection from \"../db/collections\";\n\n/* Fetch all projects details in 'wishCount' desc order from 'project' table */\n/* Query: page */\n\nconst fetchRecommendedProjects = (user, q, res) => {\n  const userId = user.id;\n  const { page } = q;\n\n  // Test code below\n  // let userId;\n  // if (user && user.id) {\n  //   userId = user.id;\n  // }\n  // if (q && q.id) {\n  //   userId = q.id;\n  // } else {\n  //   userId = 1;\n  // }\n\n  /* Start point */\n  model.Project.forge().orderBy(\"-wishCount\").fetchPage({\n    pageSize: 20,\n    page: page,\n    withRelated: [\n      \"user\",\n      \"wishes\"\n    ]\n  })\n  .then((projects)=>{\n    projects = projects.toJSON();\n\n    projects.forEach((project) => {\n      /* username, userPhoto */\n      project.username = project.user.username;\n      project.userPhoto = project.user.userPhoto;\n      delete project.user;\n\n      /* doneWish */\n      project.doneWish = false;\n      project.wishes.forEach((wish) => {\n        if (wish.userId === userId) {\n          project.doneWish = true;\n        }\n      });\n      delete project.wishes;\n    });\n\n    return projects;\n  })\n  .then((data) => {\n    res.status(200).send(data);\n  })\n  .catch((err) => {\n    console.error(\"Error: Failed to read projects in 'fetchRecommendedProjects.js': \", err);\n    res.status(500).end();\n  });\n};\n\nexport default fetchRecommendedProjects;\n"],"sourceRoot":"/source/"}