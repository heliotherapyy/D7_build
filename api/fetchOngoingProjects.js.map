{"version":3,"sources":["api/fetchOngoingProjects.js"],"names":["fetchOngoingProjects","user","q","res","userId","id","UserProject","where","orderBy","fetchAll","withRelated","then","userProjects","toJSON","today","Date","result","forEach","userProject","tempData","title","project","description","image","success","startAt","diff","Math","ceil","valueOf","onDay","doneToday","posts","post","day","push","data","status","send","catch","err","console","error","end"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;AACA;;AAEA,IAAMA,uBAAuB,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,CAAP,EAAUC,GAAV,EAAkB;AAC7C,MAAMC,SAASH,KAAKI,EAApB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAMC,WAAN,CAAkBC,KAAlB,CAAwB,QAAxB,EAAkCH,MAAlC,EAA0CI,OAA1C,CAAkD,aAAlD,EAAiEC,QAAjE,CAA0E,EAACC,aAAa,CACtF,SADsF,EAEtF,OAFsF,CAAd,EAA1E,EAICC,IAJD,CAIM,UAACC,YAAD,EAAkB;AACtBA,mBAAeA,aAAaC,MAAb,EAAf;AACA,QAAMC,QAAQ,IAAIC,IAAJ,EAAd;;AAEA;AACA,QAAMC,SAAS,EAAf;;AAEAJ,iBAAaK,OAAb,CAAqB,UAACC,WAAD,EAAiB;AACpC;AACA,UAAMC,WAAW;AACfd,YAAIa,YAAYb,EADD;AAEfe,eAAOF,YAAYG,OAAZ,CAAoBD,KAFZ;AAGfE,qBAAaJ,YAAYG,OAAZ,CAAoBC,WAHlB;AAIfC,eAAOL,YAAYG,OAAZ,CAAoBE,KAJZ;AAKfC,iBAASN,YAAYG,OAAZ,CAAoBG;AALd,OAAjB;;AAQA;AACA,UAAMC,UAAU,IAAIV,IAAJ,CAASG,YAAYO,OAArB,CAAhB;AACA;AACA,UAAMC,OAAOC,KAAKC,IAAL,CAAU,CAACd,MAAMe,OAAN,KAAkBJ,QAAQI,OAAR,EAAnB,KAAyC,KAAK,EAAL,GAAU,EAAV,GAAe,IAAxD,CAAV,CAAb;AACA,UAAI,CAACX,YAAYM,OAAb,IAAwBE,OAAO,CAA/B,IAAoCA,QAAQ,CAAhD,EAAmD;AACjDP,iBAASW,KAAT,GAAiBJ,IAAjB;AACAP,iBAASY,SAAT,GAAqB,KAArB;AACAb,oBAAYc,KAAZ,CAAkBf,OAAlB,CAA0B,UAACgB,IAAD,EAAU;AAClC,cAAIA,KAAKC,GAAL,KAAaR,IAAjB,EAAuB;AACrBP,qBAASY,SAAT,GAAqB,IAArB;AACD;AACF,SAJD;AAKAf,eAAOmB,IAAP,CAAYhB,QAAZ;AACD;AACF,KAxBD;;AA0BA,WAAOH,MAAP;AACD,GAtCD,EAuCCL,IAvCD,CAuCM,UAACyB,IAAD;AAAA,WAAUjC,IAAIkC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB,CAAV;AAAA,GAvCN,EAwCCG,KAxCD,CAwCO,UAACC,GAAD,EAAS;AACdC,YAAQC,KAAR,CAAc,6DAAd;AACAvC,QAAIkC,MAAJ,CAAW,GAAX,EAAgBM,GAAhB;AACD,GA3CD;AA4CD,CA3DD;;kBA6De3C,oB","file":"api/fetchOngoingProjects.js","sourcesContent":["import model from \"../db/models\";\nimport collection from \"../db/collections\";\n\n/* Fetch all projects from 'userProject' table */\n/* Query: none */\n\nconst fetchOngoingProjects = (user, q, res) => {\n  const userId = user.id;\n\n  // Test code below\n  // let userId;\n  // if (user && user.id) {\n  //   userId = user.id;\n  // }\n  // if (q && q.id) {\n  //   userId = q.id;\n  // } else {\n  //   userId = 1;\n  // }\n\n  /* Start point */\n  model.UserProject.where(\"userId\", userId).orderBy(\"-created_at\").fetchAll({withRelated: [\n    \"project\",\n    \"posts\"\n  ]})\n  .then((userProjects) => {\n    userProjects = userProjects.toJSON();\n    const today = new Date();\n\n    /* ongoing list */\n    const result = [];\n\n    userProjects.forEach((userProject) => {\n      /* tempData */\n      const tempData = {\n        id: userProject.id,\n        title: userProject.project.title,\n        description: userProject.project.description,\n        image: userProject.project.image,\n        success: userProject.project.success\n      };\n\n      /* Check Project status : doneToday /and/ count as total, success, fail */\n      const startAt = new Date(userProject.startAt);\n      /* Calculate diff, the difference between today and the start Date */\n      const diff = Math.ceil((today.valueOf() - startAt.valueOf()) / (60 * 60 * 24 * 1000));\n      if (!userProject.success && diff > 0 && diff <= 7) {\n        tempData.onDay = diff;\n        tempData.doneToday = false;\n        userProject.posts.forEach((post) => {\n          if (post.day === diff) {\n            tempData.doneToday = true;\n          }\n        });\n        result.push(tempData);\n      }\n    });\n\n    return result;\n  })\n  .then((data) => res.status(200).send(data))\n  .catch((err) => {\n    console.error(\"Error: Failed to read projects in 'fetchOngoingProjects.js'\");\n    res.status(500).end();\n  });\n};\n\nexport default fetchOngoingProjects;\n"],"sourceRoot":"/source/"}