{"version":3,"sources":["api/paymentCancel.js"],"names":["paymentCancel","user","q","body","res","userId","id","username","customer_uid","merchant_uid","accessToken","paymentCancelReq","params","post","then","answer","data","code","console","log","response","access_token","_token","error","message","length","status","send","catch","err","end"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,CAAP,EAAUC,IAAV,EAAgBC,GAAhB,EAAwB;AAC5C,MAAMC,SAASJ,KAAKK,EAApB;AACA,MAAMC,WAAWN,KAAKM,QAAtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjB4C,MAmBpCC,YAnBoC,GAmBLL,IAnBK,CAmBpCK,YAnBoC;AAAA,MAmBtBC,YAnBsB,GAmBLN,IAnBK,CAmBtBM,YAnBsB;;;AAqB5C,MAAIC,cAAc,EAAlB;;AAEA,MAAMC,mBAAmB;AACvBC,YAAQ,EADe;AAEvBJ,kBAAcA,YAFS;AAGvBC,kBAAc,CAACA,YAAD;AAHS,GAAzB;;AAMA,SAAO,gBAAMI,IAAN,CAAW,uCAAX,qBACNC,IADM,CACD,UAACC,MAAD,EAAY;AAChB,QAAMC,OAAOD,OAAOC,IAApB;;AAEA;AACA;AACA,QAAIA,KAAKC,IAAL,KAAc,CAAlB,EAAqB;AACnBC,cAAQC,GAAR,CAAY,kCAAZ,EAAgDH,IAAhD;AACAN,oBAAcM,KAAKI,QAAL,CAAcC,YAA5B;AACAV,uBAAiBC,MAAjB,CAAwBU,MAAxB,GAAiCZ,WAAjC;AACD,KAJD,MAIO;AACLQ,cAAQK,KAAR,CAAc,qCAAd,EAAqDP,KAAKQ,OAA1D;AACA,YAAM,iCAAiCR,KAAKQ,OAA5C;AACD;AACF,GAdM,EAeNV,IAfM,CAeD,YAAM;AACV,QAAIJ,YAAYe,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BP,cAAQK,KAAR,CAAc,4CAAd;AACA,YAAM,4CAAN;AACD;AACDL,YAAQC,GAAR,CAAY,uBAAZ,EAAqCR,gBAArC;AACA,WAAO,gBAAME,IAAN,CAAW,iEAAiEH,WAA5E,EAAyFC,gBAAzF,EACNG,IADM,CACD,UAACC,MAAD;AAAA,aAAYA,MAAZ;AAAA,KADC,CAAP;AAED,GAvBM,EAwBND,IAxBM,CAwBD,UAACC,MAAD,EAAY;AAChB,QAAMC,OAAOD,OAAOC,IAApB;AACA,QAAIA,KAAKC,IAAL,KAAc,CAAlB,EAAqB;AACnBC,cAAQC,GAAR,CAAY,oCAAZ,EAAkDH,IAAlD;AACA;AACA,UAAI,CAACZ,GAAL,EAAU;AACRc,gBAAQC,GAAR,CAAY,oCAAZ,EAAkDH,IAAlD;AACA,eAAOA,IAAP;AACD,OAHD,MAGO;AACLZ,YAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBX,IAArB;AACD;AACF,KATD,MASO;AACLE,cAAQK,KAAR,CAAc,2CAAd,EAA2DP,IAA3D;AACA,YAAM,uCAAuCA,KAAKQ,OAAlD;AACD;AACF,GAvCM,EAwCNI,KAxCM,CAwCA,UAACC,GAAD,EAAS;AACdX,YAAQK,KAAR,CAAc,gEAAd,EAAgFM,GAAhF;;AAEA;AACA,QAAI,CAACzB,GAAL,EAAU;AACR,YAAM,4DAA4DyB,GAAlE;AACD,KAFD,MAEO;AACLzB,UAAIsB,MAAJ,CAAW,GAAX,EAAgBI,GAAhB;AACA,YAAM,4DAA4DD,GAAlE;AACD;AACF,GAlDM,CAAP;AAmDD,CAhFD;;kBAkFe7B,a","file":"api/paymentCancel.js","sourcesContent":["import model from \"../db/models\";\nimport collection from \"../db/collections\";\nimport axios from \"axios\";\nimport apiKeys from \"./import/apiKeys\";\n\n/* Send payment cancel request to Iamport and update transaction in 'transactin' table */\n/* Post Data: customer_uid, merchant_uid */\n\nconst paymentCancel = (user, q, body, res) => {\n  const userId = user.id;\n  const username = user.username;\n\n  // Test code below\n  // let userId;\n  // let username;\n  // if (user && user.id) {\n  //   userId = user.id;\n  //   username = user.username;\n  // }\n  // if (q && q.id) {\n  //   userId = q.id;\n  //   username = q.username;\n  // } else {\n  //   userId = 1;\n  //   username = \"Lenny\";\n  // }\n\n  const { customer_uid, merchant_uid } = body;\n\n  let accessToken = \"\";\n\n  const paymentCancelReq = {\n    params: {},\n    customer_uid: customer_uid,\n    merchant_uid: [merchant_uid]\n  };\n\n  return axios.post(\"https://api.iamport.kr/users/getToken\", apiKeys)\n  .then((answer) => {\n    const data = answer.data;\n\n    /* check if import response's code is 0 or not */\n    /* If 0, it is well responsed, if not, should check message */\n    if (data.code === 0) {\n      console.log(\"Success: received access_token: \", data);\n      accessToken = data.response.access_token;\n      paymentCancelReq.params._token = accessToken;\n    } else {\n      console.error(\"Error: Failed to get access_token: \", data.message);\n      throw \"Failed to get access_token: \" + data.message;\n    }\n  })\n  .then(() => {\n    if (accessToken.length === 0) {\n      console.error(\"Failed to store access_token on the server\");\n      throw \"Failed to store access_token on the server\";\n    }\n    console.log(\"paymentCancelInfo is \", paymentCancelReq);\n    return axios.post(\"https://api.iamport.kr/subscribe/payments/unschedule?_token=\" + accessToken, paymentCancelReq)\n    .then((answer) => answer);\n  })\n  .then((answer) => {\n    const data = answer.data;\n    if (data.code === 0) {\n      console.log(\"Success: unscheduled transaction: \", data);\n      /* Return data, if res === null or res === undefined */\n      if (!res) {\n        console.log(\"Method use: Return record Result: \", data);\n        return data;\n      } else {\n        res.status(200).send(data);\n      }\n    } else {\n      console.error(\"Error: Failed to unschedule transaction: \", data);\n      throw \"Failed to unschedule transaction: \" + data.message;\n    }\n  })\n  .catch((err) => {\n    console.error(\"Error: Failed in canceling transaction in 'paymentCancel.js': \", err);\n\n    /* Return err, if res === null or res === undefined */\n    if (!res) {\n      throw \"Failed in canceling transaction in 'paymentCancel.js': \" + err;\n    } else {\n      res.status(500).end();\n      throw \"Failed in canceling transaction in 'paymentCancel.js': \" + err;\n    }\n  });\n};\n\nexport default paymentCancel;\n"],"sourceRoot":"/source/"}